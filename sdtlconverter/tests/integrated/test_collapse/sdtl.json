{
  "SourceFileName" : "N/A",
  "SourceLanguage" : "stata",
  "CommandCount" : 3,
  "Messages" : [ ],
  "Parser" : "stata-sdtl-converter",
  "ParserVersion" : "SDTL0.3",
  "commands" : [
   {
      "$type":"NoTransformOp",
      "command":"NoTransformOp",
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":1,
            "lineNumberEnd":1,
            "sourceStartIndex":1,
            "sourceStopIndex":19,
            "originalSourceText":"import pandas as pd"
         }
      ]
   },
   {
      "$type":"Load",
      "command":"Load",
      "fileName":"scores.csv",
      "software":"csv",
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":3,
            "lineNumberEnd":3,
            "sourceStartIndex":22,
            "sourceStopIndex":55,
            "originalSourceText":"scores = pd.read_csv(\"scores.csv\")"
         }
      ],
      "producesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ]
   },
   {
      "$type":"Unsupported",
      "command":"Unsupported",
      "messageText":[
         "Collapse functions which return a Series are not supported."
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":5,
            "lineNumberEnd":5,
            "sourceStartIndex":58,
            "sourceStopIndex":77,
            "originalSourceText":"mean = scores.mean()"
         }
      ]
   },
   {
      "$type":"Analysis",
      "command":"Analysis",
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":6,
            "lineNumberEnd":6,
            "sourceStartIndex":79,
            "sourceStopIndex":102,
            "originalSourceText":"desc = scores.describe()"
         }
      ]
   },
   {
      "$type":"Collapse",
      "command":"Collapse",
      "messageText":[
         "Collapsed variables referring to non-numeric variables will not exist in the data file."
      ],
      "groupByVariables":{
         "$type":"VariableSymbolExpression",
         "variableName":"Age"
      },
      "aggregateVariables":[
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_median",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Gender"
            }
         },
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_median",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score"
            }
         }
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":7,
            "lineNumberEnd":7,
            "sourceStartIndex":104,
            "sourceStopIndex":146,
            "originalSourceText":"median_age = scores.groupby(\"Age\").median()"
         }
      ],
      "consumesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ],
      "outputDatasetName":"median_age",
      "producesDataframe":[
         {
            "rowDimensions":[
               "Age"
            ],
            "variableInventory":[
               "Gender",
               "Score"
            ],
            "dataframeName":"median_age"
         }
      ]
   },
   {
      "$type":"Collapse",
      "command":"Collapse",
      "messageText":[
         "Collapsed variables referring to non-numeric variables will not exist in the data file."
      ],
      "groupByVariables":{
         "$type":"VariableListExpression",
         "variables":[
            {
               "$type":"VariableSymbolExpression",
               "variableName":"Gender"
            },
            {
               "$type":"VariableSymbolExpression",
               "variableName":"Age"
            }
         ]
      },
      "aggregateVariables":[
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_sum",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score"
            }
         }
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":8,
            "lineNumberEnd":8,
            "sourceStartIndex":148,
            "sourceStopIndex":198,
            "originalSourceText":"group_sum = scores.groupby([\"Gender\", \"Age\"]).sum()"
         }
      ],
      "consumesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ],
      "outputDatasetName":"group_sum",
      "producesDataframe":[
         {
            "rowDimensions":[
               "Gender",
               "Age"
            ],
            "variableInventory":[
               "Score"
            ],
            "dataframeName":"group_sum"
         }
      ]
   },
   {
      "$type":"Analysis",
      "command":"Analysis",
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":9,
            "lineNumberEnd":9,
            "sourceStartIndex":200,
            "sourceStopIndex":246,
            "originalSourceText":"group_des = scores.groupby(\"Gender\").describe()"
         }
      ]
   },
   {
      "$type":"Collapse",
      "command":"Collapse",
      "messageText":[
         "Collapsed variables referring to non-numeric variables will not exist in the data file."
      ],
      "groupByVariables":{
         "$type":"VariableSymbolExpression",
         "variableName":"Gender"
      },
      "aggregateVariables":[
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_mdev",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Age"
            }
         },
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_mdev",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score"
            }
         }
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":10,
            "lineNumberEnd":10,
            "sourceStartIndex":248,
            "sourceStopIndex":305,
            "originalSourceText":"non_index = scores.groupby(\"Gender\", as_index=False).mad()"
         }
      ],
      "consumesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ],
      "outputDatasetName":"non_index",
      "producesDataframe":[
         {
            "variableInventory":[
               "Age",
               "Score"
            ],
            "dataframeName":"non_index"
         }
      ]
   },
   {
      "$type":"Collapse",
      "command":"Collapse",
      "messageText":[
         "Collapsed variables referring to non-numeric variables will not exist in the data file."
      ],
      "groupByVariables":{
         "$type":"VariableSymbolExpression",
         "variableName":"Gender"
      },
      "aggregateVariables":[
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_var",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Age"
            }
         },
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_var",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score"
            }
         }
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":11,
            "lineNumberEnd":11,
            "sourceStartIndex":307,
            "sourceStopIndex":354,
            "originalSourceText":"single_agg = scores.groupby(\"Gender\").agg(\"var\")"
         }
      ],
      "consumesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ],
      "outputDatasetName":"single_agg",
      "producesDataframe":[
         {
            "rowDimensions":[
               "Gender"
            ],
            "variableInventory":[
               "Age",
               "Score"
            ],
            "dataframeName":"single_agg"
         }
      ]
   },
   {
      "$type":"Collapse",
      "command":"Collapse",
      "messageText":[
         "Collapsed variables referring to non-numeric variables will not exist in the data file."
      ],
      "groupByVariables":{
         "$type":"VariableSymbolExpression",
         "variableName":"Gender"
      },
      "aggregateVariables":[
         {
            "$type":"Compute",
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Age.quantile"
            },
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  },
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP2",
                     "argumentValue":{
                        "$type":"NumericConstantExpression",
                        "numericType":"Integer",
                        "value":"50"
                     }
                  }
               ],
               "function":"col_pctile",
               "isSdtlName":true
            }
         },
         {
            "$type":"Compute",
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Age.nunique"
            },
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_unique",
               "isSdtlName":true
            }
         },
         {
            "$type":"Compute",
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Age.skew"
            },
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_skew",
               "isSdtlName":true
            }
         },
         {
            "$type":"Compute",
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score.quantile"
            },
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  },
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP2",
                     "argumentValue":{
                        "$type":"NumericConstantExpression",
                        "numericType":"Integer",
                        "value":"50"
                     }
                  }
               ],
               "function":"col_pctile",
               "isSdtlName":true
            }
         },
         {
            "$type":"Compute",
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score.nunique"
            },
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_unique",
               "isSdtlName":true
            }
         },
         {
            "$type":"Compute",
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"Score.skew"
            },
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"AllNumericVariablesExpression"
                     }
                  }
               ],
               "function":"col_skew",
               "isSdtlName":true
            }
         }
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":12,
            "lineNumberEnd":12,
            "sourceStartIndex":356,
            "sourceStopIndex":431,
            "originalSourceText":"multiple_agg = scores.groupby(\"Gender\").agg([\"quantile\", \"nunique\", \"skew\"])"
         }
      ],
      "consumesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ],
      "outputDatasetName":"multiple_agg",
      "producesDataframe":[
         {
            "rowDimensions":[
               "Gender"
            ],
            "columnDimensions":[
               "Age",
               "Score"
            ],
            "variableInventory":[
               "Age.quantile",
               "Age.nunique",
               "Age.skew",
               "Score.quantile",
               "Score.nunique",
               "Score.skew"
            ],
            "dataframeName":"multiple_agg"
         }
      ]
   },
   {
      "$type":"Collapse",
      "command":"Collapse",
      "messageText":[
         "Collapsed variables referring to non-numeric variables will not exist in the data file."
      ],
      "groupByVariables":{
         "$type":"VariableSymbolExpression",
         "variableName":"Gender"
      },
      "aggregateVariables":[
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"VariableSymbolExpression",
                        "variableName":"Age"
                     }
                  }
               ],
               "function":"col_min",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"youngest"
            }
         },
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"VariableSymbolExpression",
                        "variableName":"Age"
                     }
                  }
               ],
               "function":"col_max",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"oldest"
            }
         },
         {
            "$type":"Compute",
            "expression":{
               "$type":"FunctionCallExpression",
               "arguments":[
                  {
                     "$type":"FunctionArgument",
                     "argumentName":"EXP1",
                     "argumentValue":{
                        "$type":"VariableSymbolExpression",
                        "variableName":"Score"
                     }
                  }
               ],
               "function":"col_mean",
               "isSdtlName":true
            },
            "variable":{
               "$type":"VariableSymbolExpression",
               "variableName":"mean_score"
            }
         }
      ],
      "sourceInformation":[
         {
            "$type":"SourceInformation",
            "lineNumberStart":13,
            "lineNumberEnd":17,
            "sourceStartIndex":433,
            "sourceStopIndex":642,
            "originalSourceText":"named_agg = scores.groupby(\"Gender\").agg(\n    youngest=pd.NamedAgg(column=\"Age\", aggfunc=\"min\"),\n    oldest=pd.NamedAgg(column=\"Age\", aggfunc=\"max\"),\n    mean_score=pd.NamedAgg(column=\"Score\", aggfunc=\"mean\")\n)"
         }
      ],
      "consumesDataframe":[
         {
            "dataframeName":"scores",
            "variableInventory":[
               "Age",
               "Gender",
               "Score"
            ]
         }
      ],
      "outputDatasetName":"named_agg",
      "producesDataframe":[
         {
            "rowDimensions":[
               "Gender"
            ],
            "variableInventory":[
               "youngest",
               "oldest",
               "mean_score"
            ],
            "dataframeName":"named_agg"
         }
      ]
   }
]
}